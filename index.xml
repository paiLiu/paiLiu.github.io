<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>paiLiu&#39;s blog</title>
    <link>https://pailiu.github.io/</link>
    <description>Recent content on paiLiu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Jan 2019 16:57:17 +0800</lastBuildDate>
    
	<atom:link href="https://pailiu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>正则表达式</title>
      <link>https://pailiu.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-java/</link>
      <pubDate>Fri, 18 Jan 2019 16:57:17 +0800</pubDate>
      
      <guid>https://pailiu.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-java/</guid>
      <description>正则表达式 语法 限定符 规则  &amp;rdquo;+，*，？&amp;rdquo;含义  &amp;rdquo;+&amp;ldquo;，例如&amp;rdquo;abc+b&amp;rdquo;可以匹配&amp;rdquo;abcb&amp;rdquo;,&amp;ldquo;abccb&amp;rdquo;,但是不能匹配&amp;rdquo;abb&amp;rdquo;,&amp;ldquo;+&amp;ldquo;表示至少出现一次； &amp;ldquo;*&amp;ldquo;,例如&amp;rdquo;abc*b&amp;rdquo;可以匹配&amp;rdquo;abb&amp;rdquo;,&amp;ldquo;abcb&amp;rdquo;等，&amp;rdquo;*&amp;ldquo;表示可以出现0或者一次以上； &amp;rdquo;?&amp;ldquo;,例如&amp;rdquo;abc?b&amp;rdquo;可以匹配&amp;rdquo;abcb&amp;rdquo;,&amp;ldquo;abb&amp;rdquo;,但是不能匹配&amp;rdquo;abccb&amp;rdquo;，&amp;rdquo;?&amp;ldquo;表示可以最多出现一次； &amp;rdquo;{n}&amp;ldquo;，例如&amp;rdquo;ab{2}&amp;ldquo;只能匹配&amp;rdquo;abb&amp;rdquo;,&amp;ldquo;{n}&amp;ldquo;表示出现n次； &amp;rdquo;{n,}&amp;ldquo;,例如&amp;rdquo;ab{2,}&amp;ldquo;,可以匹配&amp;rdquo;abb&amp;rdquo;,&amp;ldquo;abbb&amp;rdquo;, &amp;ldquo;{n,}&amp;ldquo;表示至少出现n次； &amp;rdquo;{m, n}&amp;ldquo;,其中m &amp;lt;= n,表示最少出现m次，最多出现n次。   总结：  &amp;rdquo;+&amp;ldquo;相当于&amp;rdquo;{1,}&amp;rdquo; ； &amp;ldquo;*&amp;ldquo;相当于&amp;rdquo;{0,}&amp;rdquo; ； &amp;rdquo;?&amp;ldquo;相当于&amp;rdquo;{0,1}&amp;rdquo; ； 在&amp;rdquo;*&amp;ldquo;或者&amp;rdquo;+&amp;ldquo;后加&amp;rdquo;?&amp;ldquo;将贪婪限定符转为非贪婪 。  定位符 规则  &amp;rdquo;^&amp;ldquo;匹配字符串开始的地方 &amp;rdquo;$&amp;ldquo;匹配字符串结束的位置 &amp;ldquo;\b&amp;rdquo;单词边界 &amp;ldquo;\B&amp;rdquo;非单词边界  常用元字符  [xyz],匹配字符集中的任意一个字符 [^xyz],匹配除了字符集以外的任何字符 x|y，匹配x或者y [a-z],匹配a-z中的任意一个字符 [^a-z],匹配任意一个不在a-z中的字符 \d,匹配一个数字字符，相当于[0-9] \D,匹配任意一个非数字字符，相当于[^0-9]  正则表达式在java中的应用 类介绍  Pattern类，正则表达式的编译表示  String regex = &amp;quot;((19|20)[0-9]{2})([0-9]{9})&amp;quot;; Pattern pattern = Pattern.compile(regex);   Matcher类，Matcher 对象是对输入字符串进行解释和匹配操作的引擎。  String regex = &amp;quot;((19|20)[0-9]{2})([0-9]{9})&amp;quot;; Pattern pattern = Pattern.</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://pailiu.github.io/post/first/</link>
      <pubDate>Wed, 26 Dec 2018 00:26:08 +0800</pubDate>
      
      <guid>https://pailiu.github.io/post/first/</guid>
      <description> 第一次尝试  第一次使用hugo和github写blog 感觉棒棒的 就是这样  </description>
    </item>
    
  </channel>
</rss>